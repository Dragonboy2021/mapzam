{"version":3,"sources":["./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/confirmed.validators.ts","./src/environments/environment.ts","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/pages/signup/signup.component.ts","./src/app/pages/signup/signup.component.html","./src/app/app-routing.module.ts","./src/app/pages/quiz/quiz.component.ts","./src/app/pages/quiz/quiz.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { AuthService } from '../../auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.sass']\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n\n  constructor(private auth: AuthService) { \n\n  }\n\n  ngOnInit(): void {\n    this.auth.authToken().subscribe((data:any) => {\n      console.log(data)\n    })\n  }\n\n  logOut() {\n    this.auth.logOut().subscribe(data => {\n      if (data.success) {\n        localStorage.clear();\n      }\n    });\n  }\n}\n","<div class=\"globe\">\n  <div class=\"home-position\">\n    <h1 class=\"home-title\">MAPZAM</h1>\n    <div class=\"home-button\">\n      <button mat-raised-button color=\"primary\" (click)=\"logOut()\">Log Out</button>\n      <button mat-raised-button color=\"primary\" routerLink=\"login\">Log In</button>\n      <button mat-raised-button color=\"primary\" routerLink=\"signup\">Sign Up</button>\n    </div>\n  </div>\n</div>","import { FormGroup } from '@angular/forms';\n\nexport function ConfirmedValidator(controlName: string, matchingControlName: string){\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\n            return;\n        }\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ confirmedValidator: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.sass']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(public fb: FormBuilder, private auth: AuthService,\n    private router: Router) { \n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.auth.login(this.loginForm.value).subscribe((response:any) => {\n        this.auth.setToken(response.headers.get('access-token'));\n        this.auth.setClient(response.headers.get('client'));\n        this.auth.setUid(response.headers.get('uid'));\n        this.router.navigateByUrl('');\n      });\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"page-position\">\n    <div class=\"title-position\">\n      <mat-icon aria-hidden=\"false\">person</mat-icon>\n      <h2>Login</h2>\n      <div class=\"title-line\"></div>\n    </div>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" novalidate>    \n      <div class=\"form-container\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email</mat-label>\n          <input formControlName=\"email\" matInput>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Password</mat-label>\n          <input formControlName=\"password\" matInput>\n          \n        </mat-form-field>\n        <div class=\"form-button\">\n          <button mat-raised-button color=\"primary\" type=\"submit\">Enter</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'mapzam';\n}\n","\n<!-- Pages -->\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './pages/home/home.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { QuizComponent } from './pages/quiz/quiz.component';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIcon, MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    QuizComponent,\n    SignupComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule, ReactiveFormsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatIconModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private url = 'http://localhost:3000';\n\n  userSignedIn$:Subject<boolean> = new Subject();\n\n  private httpHeaders: HttpHeaders = new HttpHeaders({\n    'Content-Type': 'application/json'\n  });\n\n  authHeaders: HttpHeaders = new HttpHeaders({\n    'Content-Type': 'application/json',\n    'access-token': this.getToken() || '{}',\n    'client': this.getClient() || '{}',\n    'uid': this.getUid() || '{}',\n  });\n\n  constructor(private http: HttpClient) { }\n\n  setToken(token: string) {\n    localStorage.setItem('access-token', token);\n  }\n\n  setUid(uid: string) {\n    localStorage.setItem('uid', uid);\n  }\n\n  setClient(client: string) {\n    localStorage.setItem('client', client);\n  }\n\n  getToken() {\n    return localStorage.getItem('access-token');\n  }\n\n  getUid() {\n    return localStorage.getItem('uid');\n  }\n\n  getClient() {\n    return localStorage.getItem('client');\n  }\n\n  login(data: LogIn): Observable<any> {\n    return this.http.post(\n      this.url + '/api/auth/sign_in',\n      data, { headers: this.httpHeaders, observe: 'response'});\n  }\n\n  signUp(data: SignUp): Observable<any>{\n    return this.http.post(\n      this.url + '/api/auth',\n      data, { headers: this.httpHeaders, observe: 'response'});\n  }\n\n  logOut(): Observable<any> {\n    return this.http.delete(this.url + '/api/auth/sign_out', {headers: this.authHeaders});\n  }\n\n  authToken(): Observable<any> {\n    return this.http.get(this.url + '/api/auth/validate_token', {headers: this.authHeaders});\n  }\n\n}\nexport class LogIn {\n  constructor(\n    public email?: string,\n    public password?: string\n  ) {}\n}\nexport class SignUp {\n  constructor(\n    public name?: string,\n    public email?: string,\n    public password?: string,\n    public password_confirm?: string\n  ) {}\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ConfirmedValidator } from '../confirmed.validators';\nimport { AuthService } from '../../auth.service';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.sass']\n})\nexport class SignupComponent implements OnInit {\n  signUpForm: FormGroup;\n\n  constructor(public fb: FormBuilder, private auth: AuthService,\n    private router: Router) { \n    this.signUpForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      password_confirmation: ['', [Validators.required, Validators.minLength(6)]]\n    },\n    {\n      validator: ConfirmedValidator('password', 'password_confirmation')\n    }\n    )\n  }\n\n  get f() { return this.signUpForm.controls;}\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    if (this.signUpForm.valid) {\n      this.auth.signUp(this.signUpForm.value).subscribe((response:any) => {\n       \n          console.log('test')\n          this.auth.setToken(response.headers.get('access-token'));\n          this.auth.setClient(response.headers.get('client'));\n          this.auth.setUid(response.headers.get('uid'));\n          this.router.navigateByUrl('');\n      \n      })\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"page-position\">\n    <div class=\"title-position\">\n      <mat-icon aria-hidden=\"false\">create</mat-icon>\n      <h2>Sign Up</h2>\n      <div class=\"title-line\"></div>\n    </div>\n    <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit()\" novalidate>    \n      <div class=\"form-container\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Name</mat-label>\n          <input formControlName=\"name\" matInput>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Email</mat-label>\n          <input formControlName=\"email\" matInput>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Password</mat-label>\n          <input formControlName=\"password\" matInput>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Confirm Password</mat-label>\n          <input formControlName=\"password_confirmation\" matInput>\n        </mat-form-field>\n        <div class=\"form-button\">\n          <button mat-raised-button color=\"primary\" type=\"submit\">Enter</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n\n\n  <!-- <form [formGroup]=\"signUpForm\" (ngSumbit)=\"onSubmit()\" novalidate>\n    <input placeholder=\"name\" type=\"text\" name=\"name\" ngModel>\n    <input placeholder=\"email\">\n    <input placeholder=\"password\">\n    <input placeholder=\"confirm password\">\n  </form> -->\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport { QuizComponent } from './pages/quiz/quiz.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  //{ path: '', component: QuizComponent },\n  //{ path: '**', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.sass']\n})\nexport class QuizComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"page-position\">\n    <mat-icon aria-hidden=\"false\">help</mat-icon>\n    <h2>Quiz</h2>\n\n    <div class=\"quiz-section\">\n      <div class=\"row\">\n        \n        <div class=\"question-number\">\n          <button mat-mini-fab color=\"primary\" \n            aria-label=\"Example icon button with a plus one icon\">\n            1\n          </button>\n        </div>\n\n        <div class=\"col-sm-12\">\n          <img src=\"https://via.placeholder.com/300\">\n        </div>\n        <div class=\"col-sm-12\">\n          <mat-form-field class=\"answer\">\n            <input matInput placeholder=\"Answer 1\">\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"question-number\">\n          <button mat-mini-fab color=\"primary\" \n            aria-label=\"Example icon button with a plus one icon\">\n            2\n          </button>\n        </div>\n\n        <div class=\"col-sm-12\">\n          <img src=\"https://via.placeholder.com/300\">\n      </div>\n\n      <div class=\"col-sm-12\">\n        <mat-form-field class=\"answer\">\n          <input matInput placeholder=\"Answer 2\">\n        </mat-form-field>\n      </div>\n    </div>\n\n\n  </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}